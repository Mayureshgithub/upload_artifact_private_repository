# This workflow will build a MuleSoft project and deploy to Cloud

name: Build and Deploy to Sandbox_new

on: 
  push:
    branches: [ new_branch ]
  
    
jobs:
  build:
    runs-on: ubuntu-latest    
    steps:
    
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: print branch name
      run: |
          echo "The branch name is ${{ github.ref }}"
              
    - name: Cache Depenedencies
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven    
    
    - name: Build with maven
      run: |      
        mvn -B clean package -s .maven/settings.xml
        
    
    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash-${{ github.run_number }}.jar/g")
        mv $artifactName1 $artifactName2
        
    - name: Print Run Number
      run: |
        echo "The run number is ${{ github.run_number }}"
    
    - name: List Files
      run: |  
        pwd
        ls -lart
        ls -lart ./target/
        
    - name: Upload artifact 
      uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: target/*.jar
      env:
        PAT: ${{ secrets.PAT_TOKEN_TEST }}
        
#     - name: Check Artifact
#       uses: actions/download-artifact@v2
#       with:
#         name: artifacts
#         path: .
        
#     - name: Get latest artifact and runtime ID
#       uses: actions/github-script@v4
#       with:
#         script: |
#           const runId = context.runId;
#           const artifactId = context.workflowRunId;
#           console.log(`Latest Artifact ID: ${artifacts[0].id}`);
#           console.log(`Runtime ID: ${runId}`);
          
#     - name: Get latest artifact ID
#       uses: actions/github-script@v4
#       with:
#         script: |
#           const artifactId = context.workflowRunId;
#           console.log(`Latest Artifact ID: ${artifacts[0].id}`);
          
#     - name: New Get latest artifact ID
#       uses: actions/github-script@v4
#       with:
#         script: |
#           const runId = context.runId;
#           const artifactId = await github.actions.listWorkflowRunArtifacts({
#             owner: context.repo.owner,
#             repo: context.repo.repo,
#             run_id: runId
#           });
#           console.log(`Latest Artifact ID: ${artifactId.data.artifacts[0].id}`);

    - name: New List artifact           
      run: |
         curl -L \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer  ${{ secrets.PAT_TOKEN_TEST }}"\
              -H "X-GitHub-Api-Version: 2022-11-28" \
               https://api.github.com/repos/Mayureshgithub/upload_artifact_private_repository/actions/runs/RUN_ID/artifacts
      
    

          
          
    - name: List artifact           
      run: |
          
          curl -L \
               -H "Accept: application/vnd.github+json" \
               -H "Authorization: Bearer ${{ secrets.PAT_TOKEN_TEST }}"\
               -H "X-GitHub-Api-Version: 2022-11-28" \
                https://api.github.com/repos/Mayureshgithub/upload_artifact_private_repository/actions/artifacts
        
    - name: Latest Artifact
      run: |
      
          # Get the list of artifacts for the repository
          ARTIFACTS=$(curl -s -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.PAT_TOKEN_TEST }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/repos/Mayureshgithub/upload_artifact_private_repository/actions/artifacts)

          # Extract the latest artifact ID from the list
          LATEST_ARTIFACT_ID=$(echo "$ARTIFACTS" | jq -r '.artifacts[0].id')
          
          echo $LATEST_ARTIFACT_ID
          
    - name: Download the latest artifact
      run: |   
           curl -L \
               -H "Accept: application/vnd.github+json" \
               -H "Authorization: Bearer ${{ secrets.PAT_TOKEN_TEST }}" \
               -H "X-GitHub-Api-Version: 2022-11-28" \
               https://api.github.com/repos/Mayureshgithub/upload_artifact_private_repository/actions/artifacts/${LATEST_ARTIFACT_ID}/zip \
               --output artifact.zip
               
#     - name: Unzip the downloaded artifact
#       run: |           
#           unzip -q *.zip       
          
#           # Delete the zip artifact
#           rm *.zip
               
    - name: List Files
      run: |  
            pwd
            ls -lart 
            ls -lart ./target/              
        
    - name: trigger the automated test in another repo
      uses: peter-evans/repository-dispatch@v2
      with:
        token: ${{ secrets.PAT_TOKEN_TEST }}
        repository: Mayureshgithub/Test_private_repo 
        event-type: event-name1
        client-payload: '{"branch_name": "${{ github.ref }}", "commit_sha": "${{ github.sha }}", "author_name": "${{ github.actor }}"}'

#         client-payload: '{"github": ${{ toJson(github) }}}'     
    
#     - name: Slack Notification
#       uses: act10ns/slack@v1
#       with: 
#         status: ${{ job.status }}
#         channel: '#meetups'
#         message: Build {{ env.GITHUB_REF_NAME }} branch Successfully
#       if: always()  
      
#   deploy:
#       needs: build
#       runs-on: ubuntu-latest
#       env:
#         PLATFORM_USERNAME: ${{ secrets.PLATFORM_USERNAME }}
#         PLATFORM_PASSWORD: ${{ secrets.PLATFORM_PASSWORD }}
#         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

#       steps:    
    
#       - name: Checkout repository
#         uses: actions/checkout@v2
    
#       - uses: actions/cache@v1
#         with:
#           path: ~/.m2/repository
#           key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#           restore-keys: |
#             ${{ runner.os }}-maven-
    
#       - uses: actions/download-artifact@master
#         with:
#           name: artifacts
    
#     - name: Deploy to Sandbox
#       run: mvn deploy -DmuleDeploy -DskipTests  --file pom.xml -s .maven/settings.xml
         
#     - name: Notify Slack
#       uses: act10ns/slack@v1.2.2
#       with:
#           status: ${{ job.status }}
#           steps: ${{ toJson(steps) }}
#           channel: '#meetups'
#           message: Deployed {{ env.GITHUB_REF_NAME }} branch Successfully
#       if: always()
